/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Make as PrismaMake } from "@prisma/client";

export class MakeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MakeCountArgs, "select">): Promise<number> {
    return this.prisma.make.count(args);
  }

  async makes(args: Prisma.MakeFindManyArgs): Promise<PrismaMake[]> {
    return this.prisma.make.findMany(args);
  }
  async make(args: Prisma.MakeFindUniqueArgs): Promise<PrismaMake | null> {
    return this.prisma.make.findUnique(args);
  }
  async createMake(args: Prisma.MakeCreateArgs): Promise<PrismaMake> {
    return this.prisma.make.create(args);
  }
  async updateMake(args: Prisma.MakeUpdateArgs): Promise<PrismaMake> {
    return this.prisma.make.update(args);
  }
  async deleteMake(args: Prisma.MakeDeleteArgs): Promise<PrismaMake> {
    return this.prisma.make.delete(args);
  }
}
