/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Year as PrismaYear } from "@prisma/client";

export class YearServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.YearCountArgs, "select">): Promise<number> {
    return this.prisma.year.count(args);
  }

  async years(args: Prisma.YearFindManyArgs): Promise<PrismaYear[]> {
    return this.prisma.year.findMany(args);
  }
  async year(args: Prisma.YearFindUniqueArgs): Promise<PrismaYear | null> {
    return this.prisma.year.findUnique(args);
  }
  async createYear(args: Prisma.YearCreateArgs): Promise<PrismaYear> {
    return this.prisma.year.create(args);
  }
  async updateYear(args: Prisma.YearUpdateArgs): Promise<PrismaYear> {
    return this.prisma.year.update(args);
  }
  async deleteYear(args: Prisma.YearDeleteArgs): Promise<PrismaYear> {
    return this.prisma.year.delete(args);
  }
}
